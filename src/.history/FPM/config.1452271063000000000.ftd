-- import: ft

-- ft.toc:
$processor$: toc

# The Rust Programming Language

- Introduction: /introduction/
  - Installation: /installation/
  - Hello, World!: /hello-world/
  - The Design of Rust: /design/

- Tutorial: /

- Primitive Rust: /primitive-rust/
  - Variable Bindings: /variable-bindings/
  - Functions: /functions/
  - Scalar Types: /scalar-types/
  - Compound Types: /compound-types/
  - Comments: /comments/
  - Control flow with `if`: /if/
  - Loops: /loops/

- Ownership & borrowing: /
  - Ownership: /
  - References & Borrowing: /
  - Lifetimes: /

- Structs: /structs/
  - Method Syntax: /
  - Generics: /
  - Advanced: /

- Enums: /
  - Match: /
  - Patterns: /
  - Option: /
  - if let: /

- Crates & Modules: /

- Error Handling: /

- Basic Collections: /
  - Vectors: /
  - Strings: /
  - `HashMap<K, V>`: /

- Traits: /

- Closures: /

- Iterators: /

- I/O: /
  - `Read` & `Write`: /
  - `std::fs`: /
  - `std::path`: /
  - `std::env`: /

- Testing: /

- Smart Pointers: /
  - `Deref`: /
  - `Deref` coercions: /
  - `Box<T>`: /
  - `Rc<T>`: /

- Concurrency: /
  - Threads: /
  - `Send` & `Sync`: /
  - `Arc<T>`: /
  - `Mutex<T>`: /
  - `Channels`: /

- Unsafe Rust: /
  - Raw Pointers: /
  - transmute: /

- FFI: /
  - Conditional Compilation: /
  - Bindings to C: /
  - Using Rust from Other Languages: /
  - `static`: /

- Cargo: /
  - Crates.io: /

- Advanced Type System Features: /
  - Associated Types: /
  - Trait Objects: /
  - UFCS: /
  - Coherence: /

- Interior mutability: /
  - `Cell<T>`: /
  - `RefCell<T>`: /

- Macros: /

- Nightly Rust: /

