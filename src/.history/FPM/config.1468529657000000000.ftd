-- import: ft

-- ft.toc:
$processor$: toc

# The Rust Programming Language

- Introduction: /ch01-00-introduction/
  - Installation: /ch01-01-installation/
  - Hello, World!: /ch01-02-hello-world/

- Guessing Game Tutorial: /ch02-00-guessing-game-tutorial/

<<<<<<< a2bc57618340b6257b9a4dd7d4f3993c71cde2e4
- Common Programming Concepts in Rust: /ch03-00-common-programming-concepts-in-rust/
  - Variable Bindings and Mutability: /ch03-01-variable-bindings-and-mutability/
  - Data Types: /ch03-02-data-types/
  - How Functions Work: /ch03-03-how-functions-work/
  - Comments: /ch03-04-comments/
  - Control Flow: /ch03-05-control-flow/

- Understanding Ownership: /ch04-00-understanding-ownership/
  - Ownership: /ch04-01-ownership/
  - References & Borrowing: /ch04-02-references-and-borrowing/
  - Slices: /ch04-03-slices/

- Structs: /ch05-00-structs/
  - Method Syntax: /ch05-01-method-syntax/

- Enums: /ch06-00-enums/
  - Option: /ch06-01-option/
  - Match: /ch06-02-match/
  - if let: /ch06-03-if-let/

- Modules: /ch07-00-modules/
  - `mod` and the filesystem: /ch07-01-mod-and-the-filesystem/
  - Controlling visibility with `pub`: /ch07-02-controlling-visibility-with-pub/
  - Importing names with `use`: /ch07-03-importing-names-with-use/

- Basic Collections: /
  - Vectors: /
  - Strings: /
  - `HashMap<K, V>`: /

- Error Handling: /ch07-01-error-handling/
  - Unrecoverable errors with panic!: /ch07-02-unrecoverable-errors-with-panic/
  - Recoverable errors with `Result<T, E>`: /ch07-03-recoverable-errors-with-result/

- Lifetimes: /

- Generics: /chZZ-generics/

- Traits: /

- Closures: /

- Iterators: /

- Patterns: /chXX-patterns/

- I/O: /
  - `Read` & `Write`: /
  - `std::fs`: /
  - `std::path`: /
  - `std::env`: /

- Testing: /

- Debugging: /

- Smart Pointers: /
  - `Deref`: /
  - `Deref` coercions: /
  - `Box<T>`: /
  - `Rc<T>`: /

- Concurrency: /
  - Threads: /
  - `Send` & `Sync`: /
  - `Arc<T>`: /
  - `Mutex<T>`: /
  - `Channels`: /

- Unsafe Rust: /
  - Raw Pointers: /
  - transmute: /

- FFI: /
  - Conditional Compilation: /
  - Bindings to C: /
  - Using Rust from Other Languages: /
  - `static`: /

- Creating a Library: /
  - Cargo: /
  - Crates.io: /
  - Organizing your Public API: /chYY-YY-public-api/
  - Documentation: /chYY-YY-documentation/
  - Workspaces and Multiple Related Crates: /chYY-YY-workspaces/

- Advanced Type System Features: /
  - Associated Types: /
  - Trait Objects: /
  - UFCS: /
  - Coherence: /

- Interior mutability: /
  - `Cell<T>`: /
  - `RefCell<T>`: /

- Macros: /

- Nightly Rust: /

- Appendix: /appendix-00/
  - Keywords: /appendix-01-keywords/

