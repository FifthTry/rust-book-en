-- import: ft

-- ft.toc:
$processor$: toc

# The Rust Programming Language

# Getting started

- Introduction: /ch01-00-introduction/
  - Installation: /ch01-01-installation/
  - Hello, World!: /ch01-02-hello-world/

- Guessing Game Tutorial: /ch02-00-guessing-game-tutorial/

- Common Programming Concepts: /ch03-00-common-programming-concepts/
  - Variables and Mutability: /ch03-01-variables-and-mutability/
  - Data Types: /ch03-02-data-types/
  - How Functions Work: /ch03-03-how-functions-work/
  - Comments: /ch03-04-comments/
  - Control Flow: /ch03-05-control-flow/

- Understanding Ownership: /ch04-00-understanding-ownership/
  - What is Ownership?: /ch04-01-what-is-ownership/
  - References & Borrowing: /ch04-02-references-and-borrowing/
  - Slices: /ch04-03-slices/

- Structs: /ch05-00-structs/
  - Method Syntax: /ch05-01-method-syntax/

- Enums and Pattern Matching: /ch06-00-enums/
  - Defining an Enum: /ch06-01-defining-an-enum/
  - The `match` Control Flow Operator: /ch06-02-match/
  - Concise Control Flow with `if let`: /ch06-03-if-let/

# Basic Rust Literacy

- Modules: /ch07-00-modules/
  - `mod` and the Filesystem: /ch07-01-mod-and-the-filesystem/
  - Controlling Visibility with `pub`: /ch07-02-controlling-visibility-with-pub/
  - Importing Names with `use`: /ch07-03-importing-names-with-use/

- Common Collections: /ch08-00-common-collections/
  - Vectors: /ch08-01-vectors/
  - Strings: /ch08-02-strings/
  - Hash Maps: /ch08-03-hash-maps/

- Error Handling: /ch09-00-error-handling/
  - Unrecoverable Errors with `panic!`: /ch09-01-unrecoverable-errors-with-panic/
  - Recoverable Errors with `Result`: /ch09-02-recoverable-errors-with-result/
  - To `panic!` or Not To `panic!`: /ch09-03-to-panic-or-not-to-panic/

- Generic Types, Traits, and Lifetimes: /ch10-00-generics/
  - Generic Data Types: /ch10-01-syntax/
  - Traits: Defining Shared Behavior: /ch10-02-traits/
  - Validating References with Lifetimes: /ch10-03-lifetime-syntax/

- Testing: /ch11-00-testing/
  - Writing tests: /ch11-01-writing-tests/
  - Running tests: /ch11-02-running-tests/
  - Test Organization: /ch11-03-test-organization/

- An I/O Project: /ch12-00-an-io-project/
  - Accepting Command Line Arguments: /ch12-01-accepting-command-line-arguments/
  - Reading a File: /ch12-02-reading-a-file/
  - Improving Error Handling and Modularity: /ch12-03-improving-error-handling-and-modularity/
  - Testing the Library's Functionality: /ch12-04-testing-the-librarys-functionality/
  - Working with Environment Variables: /ch12-05-working-with-environment-variables/
  - Writing to `stderr` instead of `stdout`: /ch12-06-writing-to-stderr-instead-of-stdout/

# Thinking in Rust

- Functional Language Features in Rust: /ch13-00-functional-features/
  - Closures: /ch13-01-closures/
  - Iterators: /ch13-02-iterators/
  - Improving our I/O Project: /ch13-03-improving-our-io-project/
  - Performance: /ch13-04-performance/

- More about Cargo and Crates.io: /ch14-00-more-about-cargo/
  - Release Profiles: /ch14-01-release-profiles/
  - Publishing a Crate to Crates.io: /ch14-02-publishing-to-crates-io/
  - Cargo Workspaces: /ch14-03-cargo-workspaces/
  - Installing Binaries from Crates.io with `cargo install`: /ch14-04-installing-binaries/
  - Extending Cargo with Custom Commands: /ch14-05-extending-cargo/

- Smart Pointers: /ch15-00-smart-pointers/
  - `Box<T>` Points to Data on the Heap and Has a Known Size: /ch15-01-box/
  - The `Deref` Trait Allows Access to the Data Through a Reference: /ch15-02-deref/
  - The `Drop` Trait Runs Code on Cleanup: /ch15-03-drop/
  - `Rc<T>`, the Reference Counted Smart Pointer: /ch15-04-rc/
  - `RefCell<T>` and the Interior Mutability Pattern: /ch15-05-interior-mutability/
  - Creating Reference Cycles and Leaking Memory is Safe: /ch15-06-reference-cycles/

- Concurrency: /ch16-00-concurrency/

- Is Rust OOP?: /ch17-00-oop/

# Advanced Topics

- Patterns: /ch18-00-patterns/ (perhaps an appendix?

- Advanced Features: /ch19-00-advanced-features/
  - Unsafe Rust: /ch19-01-unsafe-rust/
  - Advanced Lifetimes: /ch19-02-advanced-lifetimes/
  - Advanced Traits: /ch19-03-advanced-traits/

- Un-named project: /ch20-00-unnamed-project/

- Appendix: /appendix-00/
  - Keywords: /appendix-01-keywords/
  - Operators: /appendix-02-operators/
  - Derivable Traits: /appendix-03-derivable-traits/
  - Nightly Rust: /appendix-04-nightly-rust/
  - Macros: /appendix-05-macros/
  - Translations: /appendix-06-translation/

